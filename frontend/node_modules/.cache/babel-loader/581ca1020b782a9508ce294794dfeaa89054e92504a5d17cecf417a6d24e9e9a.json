{"ast":null,"code":"var _jsxFileName = \"/media/deeks/New Volume/Projects/Deepfake-Detection/PROJECT/frontend/src/Components/Dataset.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dataset() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('Real');\n  const [images, setImages] = useState([]);\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const mockImages = {\n    Real: [\"000405.jpg\", \"000406.jpg\", \"000407.jpg\", \"000408.jpg\", \"000409.jpg\", \"000410.jpg\", \"000411.jpg\", \"000412.jpg\", \"000413.jpg\", \"000414.jpg\", \"000415.jpg\", \"000416.jpg\", \"000417.jpg\", \"000418.jpg\", \"000419.jpg\", \"000420.jpg\", \"000421.jpg\", \"000422.jpg\", \"000423.jpg\", \"000424.jpg\", \"000425.jpg\", \"000426.jpg\", \"000427.jpg\", \"000428.jpg\", \"000429.jpg\", \"000430.jpg\", \"000431.jpg\", \"000432.jpg\", \"000433.jpg\", \"000434.jpg\", \"000435.jpg\", \"000436.jpg\", \"000437.jpg\", \"000438.jpg\", \"000439.jpg\", \"000440.jpg\", \"000441.jpg\", \"000442.jpg\", \"000443.jpg\", \"000444.jpg\", \"000445.jpg\", \"000446.jpg\", \"000447.jpg\", \"000448.jpg\", \"000449.jpg\", \"000450.jpg\", \"000451.jpg\", \"000452.jpg\", \"000453.jpg\", \"000454.jpg\", \"000455.jpg\", \"000456.jpg\", \"000457.jpg\", \"000458.jpg\", \"000459.jpg\", \"000460.jpg\", \"000461.jpg\", \"000462.jpg\", \"000463.jpg\", \"000464.jpg\", \"000465.jpg\", \"000466.jpg\", \"000467.jpg\", \"000468.jpg\", \"000469.jpg\", \"000470.jpg\", \"000471.jpg\", \"000472.jpg\", \"000473.jpg\", \"000474.jpg\", \"000475.jpg\", \"000476.jpg\", \"000477.jpg\", \"000478.jpg\", \"000479.jpg\", \"000480.jpg\", \"000481.jpg\", \"000482.jpg\", \"000483.jpg\", \"000484.jpg\", \"000485.jpg\", \"000486.jpg\", \"000487.jpg\", \"000488.jpg\", \"000489.jpg\", \"000490.jpg\", \"000491.jpg\", \"000492.jpg\", \"000498.jpg\", \"000511.jpg\", \"198699.jpg\", \"198700.jpg\", \"198701.jpg\", \"198711.jpg\", \"198712.jpg\", \"198713.jpg\", \"198729.jpg\", \"198805.jpg\", \"199084.jpg\", \"199108.jpg\"],\n    Deepfake: [\"fake_0.jpg\", \"Fake_0Testfake.jpg\", \"Fake_0Valfake.jpg\", \"fake_1.jpg\", \"fake_10.jpg\", \"Fake_10Testfake.jpg\", \"Fake_10Valfake.jpg\", \"fake_11.jpg\", \"Fake_11Testfake.jpg\", \"Fake_11Valfake.jpg\", \"fake_12.jpg\", \"Fake_12Testfake.jpg\", \"Fake_12Valfake.jpg\", \"fake_13.jpg\", \"Fake_13Testfake.jpg\", \"Fake_13Valfake.jpg\", \"fake_14.jpg\", \"Fake_14Testfake.jpg\", \"Fake_14Valfake.jpg\", \"fake_15.jpg\", \"Fake_15Testfake.jpg\", \"Fake_15Valfake.jpg\", \"fake_16.jpg\", \"Fake_16Testfake.jpg\", \"Fake_16Valfake.jpg\", \"fake_17.jpg\", \"Fake_17Testfake.jpg\", \"Fake_17Valfake.jpg\", \"fake_18.jpg\", \"Fake_18Testfake.jpg\", \"Fake_18Valfake.jpg\", \"fake_19.jpg\", \"Fake_19Testfake.jpg\", \"Fake_19Valfake.jpg\", \"Fake_1Testfake.jpg\", \"Fake_1Valfake.jpg\", \"fake_2.jpg\", \"fake_20.jpg\", \"Fake_20Testfake.jpg\", \"Fake_20Valfake.jpg\", \"fake_21.jpg\", \"Fake_21Testfake.jpg\", \"Fake_21Valfake.jpg\", \"fake_22.jpg\", \"Fake_22Testfake.jpg\", \"Fake_22Valfake.jpg\", \"fake_23.jpg\", \"Fake_23Testfake.jpg\", \"Fake_23Valfake.jpg\", \"fake_24.jpg\", \"Fake_24Testfake.jpg\", \"Fake_24Valfake.jpg\", \"fake_25.jpg\", \"Fake_25Testfake.jpg\", \"Fake_25Valfake.jpg\", \"fake_26.jpg\", \"Fake_26Testfake.jpg\", \"Fake_26Valfake.jpg\", \"fake_27.jpg\", \"Fake_27Testfake.jpg\", \"Fake_27Valfake.jpg\", \"fake_28.jpg\", \"Fake_28Testfake.jpg\", \"Fake_28Valfake.jpg\", \"fake_29.jpg\", \"Fake_29Testfake.jpg\", \"Fake_29Valfake.jpg\", \"Fake_2Testfake.jpg\", \"Fake_2Valfake.jpg\", \"fake_3.jpg\", \"fake_30.jpg\", \"Fake_30Testfake.jpg\", \"Fake_30Valfake.jpg\", \"Fake_31Testfake.jpg\", \"Fake_31Valfake.jpg\", \"fake_32.jpg\", \"Fake_32Testfake.jpg\", \"Fake_32Valfake.jpg\", \"fake_33.jpg\", \"Fake_33Testfake.jpg\", \"Fake_3Testfake.jpg\", \"Fake_3Valfake.jpg\", \"fake_4.jpg\", \"Fake_4Testfake.jpg\", \"Fake_4Valfake.jpg\", \"fake_5.jpg\", \"Fake_5Testfake.jpg\", \"Fake_5Valfake.jpg\", \"fake_6.jpg\", \"Fake_6Testfake.jpg\", \"Fake_6Valfake.jpg\", \"fake_7.jpg\", \"Fake_7Testfake.jpg\", \"Fake_7Valfake.jpg\", \"fake_8.jpg\", \"Fake_8Testfake.jpg\", \"Fake_8Valfake.jpg\", \"fake_9.jpg\", \"Fake_9Testfake.jpg\", \"Fake_9Valfake.jpg\"],\n    Generated: [\"G_image_100_1.jpg\", \"G_image_103_1.jpg\", \"G_image_104_1.jpg\", \"G_image_105_1.jpg\", \"G_image_10_1.jpg\", \"G_image_11_1.jpg\", \"G_image_12_1.jpg\", \"G_image_13_1.jpg\", \"G_image_14_1.jpg\", \"G_image_15_1.jpg\", \"G_image_16_1.jpg\", \"G_image_17_1.jpg\", \"G_image_18_1.jpg\", \"G_image_19_1.jpg\", \"G_image_1_1.jpg\", \"G_image_20_1.jpg\", \"G_image_21_1.jpg\", \"G_image_22_1.jpg\", \"G_image_23_1.jpg\", \"G_image_24_1.jpg\", \"G_image_25_1.jpg\", \"G_image_26_1.jpg\", \"G_image_27_1.jpg\", \"G_image_28_1.jpg\", \"G_image_29_1.jpg\", \"G_image_2_1.jpg\", \"G_image_30_1.jpg\", \"G_image_31_1.jpg\", \"G_image_32_1.jpg\", \"G_image_33_1.jpg\", \"G_image_34_1.jpg\", \"G_image_35_1.jpg\", \"G_image_36_1.jpg\", \"G_image_37_1.jpg\", \"G_image_38_1.jpg\", \"G_image_39_1.jpg\", \"G_image_3_1.jpg\", \"G_image_40_1.jpg\", \"G_image_41_1.jpg\", \"G_image_42_1.jpg\", \"G_image_43_1.jpg\", \"G_image_44_1.jpg\", \"G_image_45_1.jpg\", \"G_image_46_1.jpg\", \"G_image_47_1.jpg\", \"G_image_48_1.jpg\", \"G_image_49_1.jpg\", \"G_image_4_1.jpg\", \"G_image_50_1.jpg\", \"G_image_51_1.jpg\", \"G_image_52_1.jpg\", \"G_image_53_1.jpg\", \"G_image_54_1.jpg\", \"G_image_55_1.jpg\", \"G_image_56_1.jpg\", \"G_image_57_1.jpg\", \"G_image_58_1.jpg\", \"G_image_59_1.jpg\", \"G_image_5_1.jpg\", \"G_image_60_1.jpg\", \"G_image_61_1.jpg\", \"G_image_62_1.jpg\", \"G_image_63_1.jpg\", \"G_image_64_1.jpg\", \"G_image_65_1.jpg\", \"G_image_66_1.jpg\", \"G_image_67_1.jpg\", \"G_image_68_1.jpg\", \"G_image_69_1.jpg\", \"G_image_6_1.jpg\", \"G_image_70_1.jpg\", \"G_image_71_1.jpg\", \"G_image_72_1.jpg\", \"G_image_73_1.jpg\", \"G_image_74_1.jpg\", \"G_image_75_1.jpg\", \"G_image_76_1.jpg\", \"G_image_77_1.jpg\", \"G_image_78_1.jpg\", \"G_image_79_1.jpg\", \"G_image_7_1.jpg\", \"G_image_80_1.jpg\", \"G_image_81_1.jpg\", \"G_image_83_1.jpg\", \"G_image_84_1.jpg\", \"G_image_86_1.jpg\", \"G_image_87_1.jpg\", \"G_image_88_1.jpg\", \"G_image_89_1.jpg\", \"G_image_8_1.jpg\", \"G_image_90_1.jpg\", \"G_image_91_1.jpg\", \"G_image_92_1.jpg\", \"G_image_93_1.jpg\", \"G_image_94_1.jpg\", \"G_image_95_1.jpg\", \"G_image_96_1.jpg\", \"G_image_97_1.jpg\", \"G_image_98_1.jpg\", \"G_image_9_1.jpg\"]\n  };\n  useEffect(() => {\n    fetchImages();\n  }, [selectedCategory]);\n  const fetchImages = () => {\n    // Mocking the API call\n    const fetchedImages = mockImages[selectedCategory];\n    setImages(fetchedImages);\n    shuffleImages(fetchedImages);\n  };\n  const shuffleImages = images => {\n    const shuffled = [...images].sort(() => Math.random() - 0.5);\n    setShuffledImages(shuffled);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"dataset-title\",\n        children: \"Training Dataset Samples\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dataset-description\",\n        children: \"These images are used for training our deepfake detection model. Below is a sample of the images categorized as Real, DeepFake, and Generated. Click on the tabs to view different categories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav nav-tabs justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: `nav-link ${selectedCategory === 'Real' ? 'active' : ''}`,\n            \"aria-current\": selectedCategory === 'Real' ? 'page' : undefined,\n            onClick: () => setSelectedCategory('Real'),\n            children: \"Real\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: `nav-link ${selectedCategory === 'Deepfake' ? 'active' : ''}`,\n            onClick: () => setSelectedCategory('Deepfake'),\n            children: \"DeepFake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: `nav-link ${selectedCategory === 'Generated' ? 'active' : ''}`,\n            onClick: () => setSelectedCategory('Generated'),\n            children: \"Generated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: shuffledImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          style: {\n            flex: \"0 0 20%\",\n            maxWidth: \"20%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/${img}`,\n            alt: img,\n            className: \"img-fluid\",\n            style: {\n              margin: \"10px 0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Dataset, \"s30iJWbD3IE2Fe/TGtkf9g8pQ0I=\");\n_c = Dataset;\nvar _c;\n$RefreshReg$(_c, \"Dataset\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dataset","_s","selectedCategory","setSelectedCategory","images","setImages","shuffledImages","setShuffledImages","mockImages","Real","Deepfake","Generated","fetchImages","fetchedImages","shuffleImages","shuffled","sort","Math","random","children","className","fileName","_jsxFileName","lineNumber","columnNumber","undefined","onClick","map","img","index","style","flex","maxWidth","src","alt","margin","_c","$RefreshReg$"],"sources":["/media/deeks/New Volume/Projects/Deepfake-Detection/PROJECT/frontend/src/Components/Dataset.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState,useEffect } from \"react\";\r\n\r\nexport default function Dataset() {\r\n    const [selectedCategory, setSelectedCategory] = useState('Real');\r\n    const [images, setImages] = useState([]);\r\n    const [shuffledImages, setShuffledImages] = useState([]);\r\n  \r\n\r\n  const mockImages = {\r\n    Real: [\"000405.jpg\",\"000406.jpg\",\"000407.jpg\",\"000408.jpg\",\"000409.jpg\",\"000410.jpg\",\"000411.jpg\",\"000412.jpg\",\"000413.jpg\",\"000414.jpg\",\"000415.jpg\",\"000416.jpg\",\"000417.jpg\",\"000418.jpg\",\"000419.jpg\",\"000420.jpg\",\"000421.jpg\",\"000422.jpg\",\"000423.jpg\",\"000424.jpg\",\"000425.jpg\",\"000426.jpg\",\"000427.jpg\",\"000428.jpg\",\"000429.jpg\",\"000430.jpg\",\"000431.jpg\",\"000432.jpg\",\"000433.jpg\",\"000434.jpg\",\"000435.jpg\",\"000436.jpg\",\"000437.jpg\",\"000438.jpg\",\"000439.jpg\",\"000440.jpg\",\"000441.jpg\",\"000442.jpg\",\"000443.jpg\",\"000444.jpg\",\"000445.jpg\",\"000446.jpg\",\"000447.jpg\",\"000448.jpg\",\"000449.jpg\",\"000450.jpg\",\"000451.jpg\",\"000452.jpg\",\"000453.jpg\",\"000454.jpg\",\"000455.jpg\",\"000456.jpg\",\"000457.jpg\",\"000458.jpg\",\"000459.jpg\",\"000460.jpg\",\"000461.jpg\",\"000462.jpg\",\"000463.jpg\",\"000464.jpg\",\"000465.jpg\",\"000466.jpg\",\"000467.jpg\",\"000468.jpg\",\"000469.jpg\",\"000470.jpg\",\"000471.jpg\",\"000472.jpg\",\"000473.jpg\",\"000474.jpg\",\"000475.jpg\",\"000476.jpg\",\"000477.jpg\",\"000478.jpg\",\"000479.jpg\",\"000480.jpg\",\"000481.jpg\",\"000482.jpg\",\"000483.jpg\",\"000484.jpg\",\"000485.jpg\",\"000486.jpg\",\"000487.jpg\",\"000488.jpg\",\"000489.jpg\",\"000490.jpg\",\"000491.jpg\",\"000492.jpg\",\"000498.jpg\",\"000511.jpg\",\"198699.jpg\",\"198700.jpg\",\"198701.jpg\",\"198711.jpg\",\"198712.jpg\",\"198713.jpg\",\"198729.jpg\",\"198805.jpg\",\"199084.jpg\",\"199108.jpg\"],\r\n    Deepfake: [\"fake_0.jpg\",\"Fake_0Testfake.jpg\",\"Fake_0Valfake.jpg\",\"fake_1.jpg\",\"fake_10.jpg\",\"Fake_10Testfake.jpg\",\"Fake_10Valfake.jpg\",\"fake_11.jpg\",\"Fake_11Testfake.jpg\",\"Fake_11Valfake.jpg\",\"fake_12.jpg\",\"Fake_12Testfake.jpg\",\"Fake_12Valfake.jpg\",\"fake_13.jpg\",\"Fake_13Testfake.jpg\",\"Fake_13Valfake.jpg\",\"fake_14.jpg\",\"Fake_14Testfake.jpg\",\"Fake_14Valfake.jpg\",\"fake_15.jpg\",\"Fake_15Testfake.jpg\",\"Fake_15Valfake.jpg\",\"fake_16.jpg\",\"Fake_16Testfake.jpg\",\"Fake_16Valfake.jpg\",\"fake_17.jpg\",\"Fake_17Testfake.jpg\",\"Fake_17Valfake.jpg\",\"fake_18.jpg\",\"Fake_18Testfake.jpg\",\"Fake_18Valfake.jpg\",\"fake_19.jpg\",\"Fake_19Testfake.jpg\",\"Fake_19Valfake.jpg\",\"Fake_1Testfake.jpg\",\"Fake_1Valfake.jpg\",\"fake_2.jpg\",\"fake_20.jpg\",\"Fake_20Testfake.jpg\",\"Fake_20Valfake.jpg\",\"fake_21.jpg\",\"Fake_21Testfake.jpg\",\"Fake_21Valfake.jpg\",\"fake_22.jpg\",\"Fake_22Testfake.jpg\",\"Fake_22Valfake.jpg\",\"fake_23.jpg\",\"Fake_23Testfake.jpg\",\"Fake_23Valfake.jpg\",\"fake_24.jpg\",\"Fake_24Testfake.jpg\",\"Fake_24Valfake.jpg\",\"fake_25.jpg\",\"Fake_25Testfake.jpg\",\"Fake_25Valfake.jpg\",\"fake_26.jpg\",\"Fake_26Testfake.jpg\",\"Fake_26Valfake.jpg\",\"fake_27.jpg\",\"Fake_27Testfake.jpg\",\"Fake_27Valfake.jpg\",\"fake_28.jpg\",\"Fake_28Testfake.jpg\",\"Fake_28Valfake.jpg\",\"fake_29.jpg\",\"Fake_29Testfake.jpg\",\"Fake_29Valfake.jpg\",\"Fake_2Testfake.jpg\",\"Fake_2Valfake.jpg\",\"fake_3.jpg\",\"fake_30.jpg\",\"Fake_30Testfake.jpg\",\"Fake_30Valfake.jpg\",\"Fake_31Testfake.jpg\",\"Fake_31Valfake.jpg\",\"fake_32.jpg\",\"Fake_32Testfake.jpg\",\"Fake_32Valfake.jpg\",\"fake_33.jpg\",\"Fake_33Testfake.jpg\",\"Fake_3Testfake.jpg\",\"Fake_3Valfake.jpg\",\"fake_4.jpg\",\"Fake_4Testfake.jpg\",\"Fake_4Valfake.jpg\",\"fake_5.jpg\",\"Fake_5Testfake.jpg\",\"Fake_5Valfake.jpg\",\"fake_6.jpg\",\"Fake_6Testfake.jpg\",\"Fake_6Valfake.jpg\",\"fake_7.jpg\",\"Fake_7Testfake.jpg\",\"Fake_7Valfake.jpg\",\"fake_8.jpg\",\"Fake_8Testfake.jpg\",\"Fake_8Valfake.jpg\",\"fake_9.jpg\",\"Fake_9Testfake.jpg\",\"Fake_9Valfake.jpg\"],\r\n    Generated: [\"G_image_100_1.jpg\",\"G_image_103_1.jpg\",\"G_image_104_1.jpg\",\"G_image_105_1.jpg\",\"G_image_10_1.jpg\",\"G_image_11_1.jpg\",\"G_image_12_1.jpg\",\"G_image_13_1.jpg\",\"G_image_14_1.jpg\",\"G_image_15_1.jpg\",\"G_image_16_1.jpg\",\"G_image_17_1.jpg\",\"G_image_18_1.jpg\",\"G_image_19_1.jpg\",\"G_image_1_1.jpg\",\"G_image_20_1.jpg\",\"G_image_21_1.jpg\",\"G_image_22_1.jpg\",\"G_image_23_1.jpg\",\"G_image_24_1.jpg\",\"G_image_25_1.jpg\",\"G_image_26_1.jpg\",\"G_image_27_1.jpg\",\"G_image_28_1.jpg\",\"G_image_29_1.jpg\",\"G_image_2_1.jpg\",\"G_image_30_1.jpg\",\"G_image_31_1.jpg\",\"G_image_32_1.jpg\",\"G_image_33_1.jpg\",\"G_image_34_1.jpg\",\"G_image_35_1.jpg\",\"G_image_36_1.jpg\",\"G_image_37_1.jpg\",\"G_image_38_1.jpg\",\"G_image_39_1.jpg\",\"G_image_3_1.jpg\",\"G_image_40_1.jpg\",\"G_image_41_1.jpg\",\"G_image_42_1.jpg\",\"G_image_43_1.jpg\",\"G_image_44_1.jpg\",\"G_image_45_1.jpg\",\"G_image_46_1.jpg\",\"G_image_47_1.jpg\",\"G_image_48_1.jpg\",\"G_image_49_1.jpg\",\"G_image_4_1.jpg\",\"G_image_50_1.jpg\",\"G_image_51_1.jpg\",\"G_image_52_1.jpg\",\"G_image_53_1.jpg\",\"G_image_54_1.jpg\",\"G_image_55_1.jpg\",\"G_image_56_1.jpg\",\"G_image_57_1.jpg\",\"G_image_58_1.jpg\",\"G_image_59_1.jpg\",\"G_image_5_1.jpg\",\"G_image_60_1.jpg\",\"G_image_61_1.jpg\",\"G_image_62_1.jpg\",\"G_image_63_1.jpg\",\"G_image_64_1.jpg\",\"G_image_65_1.jpg\",\"G_image_66_1.jpg\",\"G_image_67_1.jpg\",\"G_image_68_1.jpg\",\"G_image_69_1.jpg\",\"G_image_6_1.jpg\",\"G_image_70_1.jpg\",\"G_image_71_1.jpg\",\"G_image_72_1.jpg\",\"G_image_73_1.jpg\",\"G_image_74_1.jpg\",\"G_image_75_1.jpg\",\"G_image_76_1.jpg\",\"G_image_77_1.jpg\",\"G_image_78_1.jpg\",\"G_image_79_1.jpg\",\"G_image_7_1.jpg\",\"G_image_80_1.jpg\",\"G_image_81_1.jpg\",\"G_image_83_1.jpg\",\"G_image_84_1.jpg\",\"G_image_86_1.jpg\",\"G_image_87_1.jpg\",\"G_image_88_1.jpg\",\"G_image_89_1.jpg\",\"G_image_8_1.jpg\",\"G_image_90_1.jpg\",\"G_image_91_1.jpg\",\"G_image_92_1.jpg\",\"G_image_93_1.jpg\",\"G_image_94_1.jpg\",\"G_image_95_1.jpg\",\"G_image_96_1.jpg\",\"G_image_97_1.jpg\",\"G_image_98_1.jpg\",\"G_image_9_1.jpg\"],\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, [selectedCategory]);\r\n\r\n  const fetchImages = () => {\r\n    // Mocking the API call\r\n    const fetchedImages = mockImages[selectedCategory];\r\n    setImages(fetchedImages);\r\n    shuffleImages(fetchedImages);\r\n  };\r\n\r\n  const shuffleImages = (images) => {\r\n    const shuffled = [...images].sort(() => Math.random() - 0.5);\r\n    setShuffledImages(shuffled);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"text-center my-4\">\r\n        <h3 className=\"dataset-title\">Training Dataset Samples</h3>\r\n        <p className=\"dataset-description\">\r\n          These images are used for training our deepfake detection model. Below is a sample of the images categorized as Real, DeepFake, and Generated. Click on the tabs to view different categories.\r\n        </p>\r\n      </div>\r\n      <nav>\r\n      <ul className=\"nav nav-tabs justify-content-center\">\r\n        <li className=\"nav-item\">\r\n          <a \r\n            className={`nav-link ${selectedCategory === 'Real' ? 'active' : ''}`} \r\n            aria-current={selectedCategory === 'Real' ? 'page' : undefined}\r\n            onClick={() => setSelectedCategory('Real')}\r\n          >\r\n            Real\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a \r\n            className={`nav-link ${selectedCategory === 'Deepfake' ? 'active' : ''}`} \r\n            onClick={() => setSelectedCategory('Deepfake')}\r\n          >\r\n            DeepFake\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a \r\n            className={`nav-link ${selectedCategory === 'Generated' ? 'active' : ''}`} \r\n            onClick={() => setSelectedCategory('Generated')}\r\n          >\r\n            Generated\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      </nav>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {shuffledImages.map((img, index) => (\r\n            <div key={index} className=\"col-2\" style={{ flex: \"0 0 20%\", maxWidth: \"20%\" }}>\r\n              <img\r\n                src={`/images/${img}`}\r\n                alt={img}\r\n                className=\"img-fluid\"\r\n                style={{ margin: \"10px 0\" }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}